# Build documentation
name: Build and upload documentation

defaults:
  run:
    shell: bash

on:  # Runs on any push event in a PR or any push event to master
  pull_request:
  push:
    branches:
      - 'master'

jobs:
  documentation:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:  # only lowest supported python on ubuntu-latest
        os: [ubuntu-latest]
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2

      - name: Install LaTeX
        run: sudo apt-get install -y texlive-latex-base # texlive-fonts-extra texlive-fonts-recommended texlive-latex-extra texlive-latex-recommended ghostscript

      - name: Install optipng
        run: sudo apt-get install -y optipng

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: 1.1.0

      - name: Configure Poetry
        run: |
          echo "PATH=$HOME/.poetry/bin:$PATH" >> $GITHUB_ENV
          poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Upgrade pip, setuptools and wheel
        run: poetry run python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: poetry install -v

      # Sometimes the minrpc client will close while documentation builds and I don't know why
      # Forcing several successive builds here and hoping it works out (sphinx-gallery 
      # checks for the existence of already built examples to avoid re-running them, so
      # once the gallery is built successive builds will just re-generate the html, very quickly)
      - name: Build documentation (1/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (2/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (3/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (4/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (5/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (6/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (7/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (8/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (9/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (10/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (11/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (12/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (13/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (14/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      - name: Build documentation (15/15)
        continue-on-error: true
        run: poetry run python -m sphinx -v -b html docs doc_build -d doc_build

      # Upload artifacts if in PR so reviewers can have a quick look without building documentation from the branch locally
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        if: success() && github.event_name == 'pull_request'  # only for pushes in PR
        with:
          name: site-build
          path: doc_build
          retention-days: 7

      - name: Upload documentation to gh-pages
        if: success() && github.ref == 'refs/heads/master'  # only for pushes to master
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: doc_build
