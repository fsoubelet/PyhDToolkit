[tool.poetry]
name = "pyhdtoolkit"
version = "0.8.4"
description = "An all-in-one toolkit package to easy my Python work in my PhD."
authors = ["Felix Soubelet <felix.soubelet@cern.ch>"]
license = "MIT"

packages = [
    {include = "pyhdtoolkit"}
]

readme = "README.md"
repository = "https://github.com/fsoubelet/PyhDToolkit"

keywords = ["PHD", "Accelerator Physics", "Physics Simulation", "Visualisation", "Docker"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Utilities",
]

# Core dependencies of the package
[tool.poetry.dependencies]
python = ">=3.7,<3.9"  # go back to "^3.7" once numba gets compatible with 3.9
numpy = "^1.19"
pandas = "^1.0"
matplotlib = "^3.1"
scipy = "^1.4"
tfs-pandas = "^2.0"
loguru = "^0"
numba = ">=0.51,<1.0"
cpymad = "^1.6"
#optics-functions = "^0"

# Defining optional dependencies for extras
portray = { version = "^1.4", optional = true }

# Defining the extras
[tool.poetry.extras]
docs = ["portray"]

[tool.poetry.dev-dependencies]
pytest = "^6.0"
pytest-cov = "^2.7"
flaky = "^3.5"
black = { version = "^19.10b0", python = "^3.6" }
pytest-sugar = "^0.9"
pylint = "^2.4"
pytest-randomly = "^3.3"
mypy = "<1.0"
coverage = {extras = ["toml"], version = "^5.2"}
pytest-mpl = "<1.0"
interrogate = "^1.3"

# ----- Testing Configuration ----- #

[tool.pytest.ini_options]
addopts = "--mpl --no-flaky-report --cov-report=xml --cov-report term-missing --cov-config=pyproject.toml --cov=pyhdtoolkit"
testpaths = ["tests"]

[tool.coverage.run]
source = ["pyhdtoolkit/"]

[tool.coverage.report]
ignore_errors = true

# ----- Documentation Configuration ----- #

[tool.portray]
extra_markdown_extensions = [
    "admonition",
    "codehilite",
    "footnotes",
    "pymdownx.arithmatex",
    "pymdownx.betterem",
    "pymdownx.caret",
    "pymdownx.critic",
    "pymdownx.details",
    "pymdownx.inlinehilite",
    "pymdownx.magiclink",
    "pymdownx.tabbed",
    "pymdownx.tasklist",
    "pymdownx.keys",
    "pymdownx.mark",
    "pymdownx.smartsymbols",
    "pymdownx.superfences",
    "pymdownx.tasklist",
    "pymdownx.tilde"
]
modules = ["pyhdtoolkit"]

[tool.portray.mkdocs]
repo_url = "https://github.com/fsoubelet/PyhDToolkit/"
repo_name = "PyhDToolkit"

[tool.portray.mkdocs.theme]
name = "material"
palette = {scheme = "slate", primary = "teal", accent = "purple"}
font = {text = "Ubuntu Mono", code = "Fira Code"}

[[tool.portray.mkdocs.nav]]
Home = "README.md"

[[tool.portray.mkdocs.nav]]
"About" = "docs/About_PyhDToolkit.md"

[[tool.portray.mkdocs.nav]]
"Getting Started" = "docs/Getting_Started.md"

# ----- Utilities Configuration ----- #

[tool.isort]
atomic = true
ensure_newline_before_comments = true
filter_files = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
known_first_party = "pyhdtoolkit"
known_third_party = "pytest"
line_length = 110
lines_between_types = 1
multi_line_output = 3
use_parentheses = true

[tool.black]
line-length = 110
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.pylint]
[tool.pylint.master]
jobs="1"    # Auto-detect the number of processors
ignore-patterns='''
    \.eggs
    |\.git
    |build
    |dist
    |conf.py
'''
persistent="no"
load-plugins=""
limit-inference-results="100"
suggestion-mode="yes"
unsafe-load-any-extension="no"
extension-pkg-whitelist=""
exit-zero="no"
from-stdin="no"

[tool.pylint.messages_control]
disable = [
    "attribute-defined-outside-init",
    "bad-continuation",
    "expression-not-assigned",
    "invalid-name",
    "import-error",
    "logging-format-interpolation",
    "protected-access",
    "too-few-public-methods",
    "too-many-instance-attributes",
    "format",  # handled by black
]

[tool.pylint.reports]
output-format="text"
msg-template="{path}:{line}:{column}: Pylint: {msg}. [{msg_id}: {symbol}]"

[tool.pylint.basic]
argument-naming-style="snake_case"
attr-naming-style="snake_case"
class-attribute-naming-style="snake_case"
class-naming-style="PascalCase"
const-naming-style="UPPER_CASE"
function-naming-style="snake_case"
inlinevar-naming-style="snake_case"
method-naming-style="snake_case"
module-naming-style="snake_case"
variable-naming-style="snake_case"

[tool.pylint.design]
max-args="10"
max-attributes="10"
max-locals="15"
max-public-methods="20"
max-returns="5"

[tool.pylint.'SIMILARITIES']
ignore-comments=['yes']
ignore-docstrings=['yes']
ignore-imports=['no']
min-similarity-lines=4

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
fail-under = 95
exclude = ["tests"]
ignore-regex = []
verbose = 2
quiet = false
whitelist-regex = []
color = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
