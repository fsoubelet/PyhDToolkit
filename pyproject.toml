[tool.poetry]
name = "pyhdtoolkit"
version = "0.5.0"
description = "An all-in-one toolkit package to easy my Python work in my PhD."
authors = ["Felix Soubelet <felix.soubelet@cern.ch>"]
license = "MIT"

packages = [
    {include = "pyhdtoolkit"}
]

readme = "README.md"
repository = "https://github.com/fsoubelet/PyhDToolkit"

keywords = ["PHD", "Accelerator Physics", "Physics Simulation", "Visualisation", "Docker"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Utilities",
]

# Core dependencies of the package
[tool.poetry.dependencies]
python = "^3.6"
numpy = "^1.18.2"
pandas = "<1.0"
matplotlib = "^3.1"
scipy = "^1.4.1"
tfs-pandas = "^1.0.3"
loguru = "^0.5.2"
numba = "^0.50.1"
rich = "^5.2.0"

# Defining optional dependencies for extras
cpymad = { version = "^1.6.0", optional = true }

# Defining the extras
[tool.poetry.extras]
madx = ["cpymad"]

[tool.poetry.dev-dependencies]
pytest = "^6.0"
pytest-cov = "^2.7"
flaky = "^3.5"
black = { version = "^19.10b0", python = "^3.6" }
pytest-sugar = "^0.9.2"
pylint = "^2.4.4"
pytest-randomly = "^3.3.1"
mypy = "^0.782"
coverage = {extras = ["toml"], version = "^5.2.1"}
pytest-mpl = "^0.11"
interrogate = "^1.3.1"

[tool.poetry.scripts]
ac_dipole = "pyhdtoolkit.scripts.ac_dipole.sext_ac_dipole_tracking:main"
triplet_errors = "pyhdtoolkit.scripts.triplet_errors.algo:main"

[tool.pytest.ini_options]
addopts = "--mpl --no-flaky-report --cov-report=xml --cov-report term-missing --cov-config=pyproject.toml --cov=pyhdtoolkit" # pytest-cov: report missed lines, output as xml, config is pyproject.toml and analyze for pyhdtoolkit directory
testpaths = ["tests"]

[tool.coverage.run]
source = ["pyhdtoolkit/"]

[tool.coverage.report]
ignore_errors = true
omit = ["pyhdtoolkit/scripts/*", "pyhdtoolkit/optics/amplitude_detuning.py"]

[tool.isort]
line_length = 100
force_single_line = false
atomic = true
include_trailing_comma = true
lines_between_types = 1
use_parentheses = true
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "pyhdtoolkit"
known_third_party = "pytest"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.pylint]
    [tool.pylint.master]
    jobs="0"    # Auto-detect the number of processors
    ignore-patterns='''
        \.eggs
        |\.git
        |build
        |dist
        |conf.py
    '''
    persistent="no"
    load-plugins=""
    limit-inference-results="100"
    suggestion-mode="yes"
    unsafe-load-any-extension="no"
    extension-pkg-whitelist=""
    exit-zero="no"
    from-stdin="no"

    [tool.pylint.messages_control]
    disable = [
        "attribute-defined-outside-init",
        "bad-continuation",
        "expression-not-assigned",
        "invalid-name",
        "import-error",
        "logging-format-interpolation",
        "protected-access",
        "too-few-public-methods",
        "too-many-instance-attributes",
        "format",  # handled by black
    ]

    [tool.pylint.reports]
    output-format="text"
    msg-template="{path}:{line}:{column}: Pylint: {msg}. [{msg_id}: {symbol}]"

    [tool.pylint.basic]
    argument-naming-style="snake_case"
    attr-naming-style="snake_case"
    class-attribute-naming-style="snake_case"
    class-naming-style="PascalCase"
    const-naming-style="UPPER_CASE"
    function-naming-style="snake_case"
    inlinevar-naming-style="snake_case"
    method-naming-style="snake_case"
    module-naming-style="snake_case"
    variable-naming-style="snake_case"

    [tool.pylint.design]
    max-args="10"
    max-attributes="10"
    max-locals="15"
    max-public-methods="20"
    max-returns="5"

    [tool.pylint.'SIMILARITIES']
    ignore-comments=['yes']
    ignore-docstrings=['yes']
    ignore-imports=['no']
    min-similarity-lines=4

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
fail-under = 95
exclude = ["tests"]
ignore-regex = []
verbose = 2
quiet = false
whitelist-regex = []
color = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"