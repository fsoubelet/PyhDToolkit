
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/demo_aperture.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_demo_aperture.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_demo_aperture.py:


.. _demo-accelerator-aperture:

====================
Accelerator Aperture
====================

This example shows how to use the `~.plotters.AperturePlotter.plot_aperture` function
to visualise the available aperture in your machine, with the LHC for example.

.. GENERATED FROM PYTHON SOURCE LINES 12-24

.. code-block:: default


    import matplotlib.pyplot as plt

    from cpymad.madx import Madx

    from pyhdtoolkit.cpymadtools import lhc
    from pyhdtoolkit.cpymadtools.plotters import AperturePlotter
    from pyhdtoolkit.utils import defaults

    defaults.config_logger(level="warning")
    plt.rcParams.update(defaults._SPHINX_GALLERY_PARAMS)  # for readability of this tutorial








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Setup a simple LHC simulation in ``MAD-X``, at injection energy (450 GeV)

.. GENERATED FROM PYTHON SOURCE LINES 26-36

.. code-block:: default


    madx = Madx(stdout=False)
    madx.option(echo=False, warn=False)

    madx.call("lhc/lhc_as-built.seq")
    madx.call("lhc/opticsfile.1")  # injection optics

    lhc.make_lhc_beams(madx, energy=450)
    madx.command.use(sequence="lhcb1")








.. GENERATED FROM PYTHON SOURCE LINES 37-39

We now call the aperture definitions and tolerances, then task ``MAD-X`` with
computing the available aperture:

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default


    madx.call("lhc/aperture.b1.madx")
    madx.call("lhc/aper_tol.b1.madx")

    madx.command.twiss()
    madx.command.aperture(
        cor=0.002, dp=8.6e-4, halo="{6,6,6,6}", bbeat=1.05, dparx=0.14, dpary=0.14
    )








.. GENERATED FROM PYTHON SOURCE LINES 49-51

We can now determine the exact position of the IP5 point and plot the LHC
injection aperture:

.. GENERATED FROM PYTHON SOURCE LINES 51-69

.. code-block:: default


    twiss_df = madx.table.twiss.dframe().copy()
    ip5s = twiss_df.s[twiss_df.name.str.contains("ip5")].to_numpy()[0]

    ir5_aperture_collision = AperturePlotter.plot_aperture(
        madx,
        title="IR5, Collision Optics Aperture Tolerance",
        plot_bpms=True,
        xlimits=(ip5s - 80, ip5s + 80),
        aperture_ylim=(0, 20),
        k0l_lim=(-4e-4, 4e-4),
        color="darkslateblue",
    )
    for axis in ir5_aperture_collision.axes:
        axis.axvline(x=ip5s, color="red", ls="--", lw=1.5, label="IP5")
    ir5_aperture_collision.gca().legend()
    plt.show()




.. image-sg:: /gallery/images/sphx_glr_demo_aperture_001.svg
   :alt: IR5, Collision Optics Aperture Tolerance
   :srcset: /gallery/images/sphx_glr_demo_aperture_001.svg, /gallery/images/sphx_glr_demo_aperture_001_2_0x.svg 2.0x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 70-71

Let's not forget to close the rpc connection to ``MAD-X``:

.. GENERATED FROM PYTHON SOURCE LINES 71-74

.. code-block:: default


    madx.exit()








.. GENERATED FROM PYTHON SOURCE LINES 75-82

.. admonition:: References

   The use of the following functions, methods, classes and modules is shown
   in this example:

   - `~.cpymadtools.lhc`: `~.lhc.make_lhc_beams`
   - `~.cpymadtools.plotters`: `~.plotters.AperturePlotter`, `~.plotters.AperturePlotter.plot_aperture`


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  38.350 seconds)


.. _sphx_glr_download_gallery_demo_aperture.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: demo_aperture.py <demo_aperture.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: demo_aperture.ipynb <demo_aperture.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
