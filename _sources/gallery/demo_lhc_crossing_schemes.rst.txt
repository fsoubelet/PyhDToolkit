
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/demo_lhc_crossing_schemes.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_demo_lhc_crossing_schemes.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_demo_lhc_crossing_schemes.py:


.. _demo-crossing-schemes:

====================
LHC Crossing Schemes
====================

This example shows how to use the `~.plotting.crossing.plot_two_lhc_ips_crossings`
function to visualise the crossing schemes setup at the LHC IRs.

.. note::
    This is very LHC-specific and will not work with other machines.

.. GENERATED FROM PYTHON SOURCE LINES 15-29

.. code-block:: Python


    import matplotlib.pyplot as plt

    from cpymad.madx import Madx

    from pyhdtoolkit.cpymadtools import lhc
    from pyhdtoolkit.plotting.crossing import plot_two_lhc_ips_crossings
    from pyhdtoolkit.plotting.styles import _SPHINX_GALLERY_PARAMS
    from pyhdtoolkit.utils import logging

    logging.config_logger(level="error")
    plt.rcParams.update(_SPHINX_GALLERY_PARAMS)  # for readability of this tutorial









.. GENERATED FROM PYTHON SOURCE LINES 30-31

Setup a simple LHC simulation in ``MAD-X``, with collision optics (at 6.8 TeV):

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: Python


    madx = Madx(stdout=False)
    madx.option(echo=False, warn=False)
    madx.call("lhc/lhc_as-built.seq")
    madx.call("lhc/opticsfile.22")  # collisions optics








.. GENERATED FROM PYTHON SOURCE LINES 38-42

Let's explicitely re-cycle both sequences to avoid having IR1 split at beginning
and end of lattice. Note that it is important to re-cycle both sequences from
the same points for the plots later on. Created beams use a normalized emittance
of 3.75E-6 m rad as corresponds to the Run 2 config of this opticsfile.

.. GENERATED FROM PYTHON SOURCE LINES 42-50

.. code-block:: Python


    lhc.re_cycle_sequence(madx, sequence="lhcb1", start="IP3")
    lhc.re_cycle_sequence(madx, sequence="lhcb2", start="IP3")
    lhc.make_lhc_beams(
        madx, nemitt_x=3.75e-6, nemitt_y=3.75e-6, energy=6800
    )  # necessary after re-cycling
    madx.command.use(sequence="lhcb1")








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Now we plot the crossing schemes, here for IP1 and IP5.

.. GENERATED FROM PYTHON SOURCE LINES 52-58

.. code-block:: Python


    fig1 = plt.figure(figsize=(18, 11))
    plot_two_lhc_ips_crossings(madx, first_ip=1, second_ip=5)
    fig1.align_ylabels([fig1.axes[0], fig1.axes[1]])
    plt.show()




.. image-sg:: /gallery/images/sphx_glr_demo_lhc_crossing_schemes_001.svg
   :alt: IP1 Crossing Schemes, IP5 Crossing Schemes
   :srcset: /gallery/images/sphx_glr_demo_lhc_crossing_schemes_001.svg, /gallery/images/sphx_glr_demo_lhc_crossing_schemes_001_2_00x.svg 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-61

We can have a look at, say, IP2 and IP8 by simply changing the parameters, and
for instance also remove the highlighting of MQX and MBX elements:

.. GENERATED FROM PYTHON SOURCE LINES 61-67

.. code-block:: Python


    fig2 = plt.figure(figsize=(18, 11))
    plot_two_lhc_ips_crossings(madx, first_ip=2, second_ip=8, highlight_mqx_and_mbx=False)
    fig2.align_ylabels([fig2.axes[0], fig2.axes[1]])
    plt.show()




.. image-sg:: /gallery/images/sphx_glr_demo_lhc_crossing_schemes_002.svg
   :alt: IP2 Crossing Schemes, IP8 Crossing Schemes
   :srcset: /gallery/images/sphx_glr_demo_lhc_crossing_schemes_002.svg, /gallery/images/sphx_glr_demo_lhc_crossing_schemes_002_2_00x.svg 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 68-69

Let's not forget to close the rpc connection to ``MAD-X``:

.. GENERATED FROM PYTHON SOURCE LINES 69-72

.. code-block:: Python


    madx.exit()








.. GENERATED FROM PYTHON SOURCE LINES 73-80

.. admonition:: References

   The use of the following functions, methods, classes and modules is shown
   in this example:

   - `~.cpymadtools.lhc`: `~.lhc._setup.make_lhc_beams`, `~.lhc._setup.re_cycle_sequence`
   - `~.plotting.crossing`: `~.plotting.crossing.plot_two_lhc_ips_crossings`


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 8.817 seconds)


.. _sphx_glr_download_gallery_demo_lhc_crossing_schemes.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_lhc_crossing_schemes.ipynb <demo_lhc_crossing_schemes.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_lhc_crossing_schemes.py <demo_lhc_crossing_schemes.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: demo_lhc_crossing_schemes.zip <demo_lhc_crossing_schemes.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
