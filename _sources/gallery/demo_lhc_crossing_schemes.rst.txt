
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/demo_lhc_crossing_schemes.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_demo_lhc_crossing_schemes.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_demo_lhc_crossing_schemes.py:


.. _demo-crossing-schemes:

====================
LHC Crossing Schemes
====================

This example shows how to use the `~.plotters.CrossingSchemePlotter.plot_two_lhc_ips_crossings` function
to visualise the crossing schemes setup at the LHC IRs.

.. note::
    This is very LHC-specific and will most likely not work with other machines.

.. GENERATED FROM PYTHON SOURCE LINES 15-29

.. code-block:: default

    import matplotlib
    import matplotlib.pyplot as plt
    import pandas as pd

    from cpymad.madx import Madx

    from pyhdtoolkit.cpymadtools import lhc
    from pyhdtoolkit.cpymadtools.plotters import CrossingSchemePlotter
    from pyhdtoolkit.utils import defaults

    defaults.config_logger(level="warning")
    plt.rcParams.update(defaults._SPHINX_GALLERY_PARAMS)  # for readability of this tutorial









.. GENERATED FROM PYTHON SOURCE LINES 30-31

Setup a simple LHC simulation in ``MAD-X``, with collision optics (at 7 TeV):

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: default


    madx = Madx(stdout=False)
    madx.option(echo=False, warn=False)
    madx.call("lhc/lhc_as-built.seq")
    madx.call("lhc/opticsfile.22")  # collisions optics








.. GENERATED FROM PYTHON SOURCE LINES 38-41

Let's re-cycle the sequences to avoid having IR1 split at beginning and end of lattice,
as is the default in the LHC sequence. Note that it is important to re-cycle both
sequences from the same points for the plots later on.

.. GENERATED FROM PYTHON SOURCE LINES 41-47

.. code-block:: default


    lhc.re_cycle_sequence(madx, sequence="lhcb1", start="IP3")
    lhc.re_cycle_sequence(madx, sequence="lhcb2", start="IP3")
    lhc.make_lhc_beams(madx, energy=7000)
    madx.command.use(sequence="lhcb1")








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Now we plot the crossing schemes, here for IP1 and IP5.

.. GENERATED FROM PYTHON SOURCE LINES 49-53

.. code-block:: default


    CrossingSchemePlotter.plot_two_lhc_ips_crossings(madx, first_ip=1, second_ip=5)
    plt.show()




.. image-sg:: /gallery/images/sphx_glr_demo_lhc_crossing_schemes_001.svg
   :alt: IP1 Crossing Schemes, IP5 Crossing Schemes
   :srcset: /gallery/images/sphx_glr_demo_lhc_crossing_schemes_001.svg, /gallery/images/sphx_glr_demo_lhc_crossing_schemes_001_2_0x.svg 2.0x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2022-09-22 00:36:12 | WARNING  | pyhdtoolkit.cpymadtools.plotters:449 - You should re-call the 'USE' command on your wanted sequence after this plot!




.. GENERATED FROM PYTHON SOURCE LINES 54-56

We can have a look at, say, IP2 and IP8 by simply changing the parameters, and
for instance also remove the highlighting of MQX and MBX elements:

.. GENERATED FROM PYTHON SOURCE LINES 56-61

.. code-block:: default


    CrossingSchemePlotter.plot_two_lhc_ips_crossings(
        madx, first_ip=2, second_ip=8, highlight_mqx_and_mbx=False
    )




.. image-sg:: /gallery/images/sphx_glr_demo_lhc_crossing_schemes_002.svg
   :alt: IP2 Crossing Schemes, IP8 Crossing Schemes
   :srcset: /gallery/images/sphx_glr_demo_lhc_crossing_schemes_002.svg, /gallery/images/sphx_glr_demo_lhc_crossing_schemes_002_2_0x.svg 2.0x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2022-09-22 00:36:15 | WARNING  | pyhdtoolkit.cpymadtools.plotters:449 - You should re-call the 'USE' command on your wanted sequence after this plot!




.. GENERATED FROM PYTHON SOURCE LINES 62-63

Let's not forget to close the rpc connection to ``MAD-X``:

.. GENERATED FROM PYTHON SOURCE LINES 63-66

.. code-block:: default


    madx.exit()








.. GENERATED FROM PYTHON SOURCE LINES 67-74

.. admonition:: References

   The use of the following functions, methods, classes and modules is shown
   in this example:

   - `~.cpymadtools.lhc`: `~.lhc.make_lhc_beams`, `~.lhc.re_cycle_sequence`
   - `~.cpymadtools.plotters`: `~.plotters.CrossingSchemePlotter`, `~.plotters.CrossingSchemePlotter.plot_two_lhc_ips_crossings`


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.381 seconds)


.. _sphx_glr_download_gallery_demo_lhc_crossing_schemes.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_lhc_crossing_schemes.py <demo_lhc_crossing_schemes.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_lhc_crossing_schemes.ipynb <demo_lhc_crossing_schemes.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
